events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/rss+xml font/truetype font/opentype
               application/vnd.ms-fontobject image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=dashboard_limit:10m rate=5r/s;

    # Upstream LiteLLM
    upstream litellm_backend {
        server litellm:4000;
        keepalive 32;
    }

    # HTTP - Redirect to HTTPS
    server {
        listen 80;
        server_name prod.litellm.deeprunner.ai;

        # ACME challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS - Main configuration
    server {
        listen 443 ssl http2;
        server_name prod.litellm.deeprunner.ai;

        # SSL Configuration (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/prod.litellm.deeprunner.ai/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/prod.litellm.deeprunner.ai/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Dashboard - Custom Analytics
        location /dashboard {
            alias /usr/share/nginx/html/dashboard;
            index index.html;
            limit_req zone=dashboard_limit burst=10 nodelay;

            # Basic auth for dashboard (optional)
            # auth_basic "Analytics Dashboard";
            # auth_basic_user_file /etc/nginx/.htpasswd;
        }

        # LiteLLM Admin UI
        location /ui {
            proxy_pass http://litellm_backend/ui;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # LiteLLM API
        location / {
            limit_req zone=api_limit burst=20 nodelay;

            proxy_pass http://litellm_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts for long-running LLM requests
            proxy_read_timeout 600s;
            proxy_connect_timeout 75s;
            proxy_send_timeout 600s;

            # Buffering
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://litellm_backend/health;
            access_log off;
        }
    }
}
