model_list:
  # OpenAI Models
  - model_name: gpt-4
    litellm_params:
      model: gpt-4
      api_key: os.environ/OPENAI_API_KEY

  - model_name: gpt-4-turbo
    litellm_params:
      model: gpt-4-turbo-preview
      api_key: os.environ/OPENAI_API_KEY

  - model_name: gpt-3.5-turbo
    litellm_params:
      model: gpt-3.5-turbo
      api_key: os.environ/OPENAI_API_KEY

  # Anthropic Models
  - model_name: claude-3-opus
    litellm_params:
      model: claude-3-opus-20240229
      api_key: os.environ/ANTHROPIC_API_KEY

  - model_name: claude-3-sonnet
    litellm_params:
      model: claude-3-5-sonnet-20241022
      api_key: os.environ/ANTHROPIC_API_KEY

  - model_name: claude-3-haiku
    litellm_params:
      model: claude-3-haiku-20240307
      api_key: os.environ/ANTHROPIC_API_KEY

  # Azure OpenAI (configure after Azure setup)
  # - model_name: azure-gpt-4
  #   litellm_params:
  #     model: azure/gpt-4
  #     api_base: os.environ/AZURE_API_BASE
  #     api_key: os.environ/AZURE_API_KEY
  #     api_version: os.environ/AZURE_API_VERSION

  # Local Ollama Models
  - model_name: mistral-local
    litellm_params:
      model: ollama/mistral
      api_base: http://ollama:11434

litellm_settings:
  # Database logging
  store_model_in_db: true

  # Cache settings (disabled - no Redis for now)
  # cache: true
  # cache_params:
  #   type: "redis"

  # Rate limiting
  max_parallel_requests: 100

  # Timeout settings
  request_timeout: 600

  # Set default model
  default_team_settings:
    - team_id: default
      metadata:
        default_model: gpt-3.5-turbo

general_settings:
  master_key: os.environ/LITELLM_MASTER_KEY
  database_url: os.environ/DATABASE_URL

  # Admin UI settings
  ui_username: os.environ/UI_USERNAME
  ui_password: os.environ/UI_PASSWORD

  # Microsoft SSO Configuration
  enable_sso: true
  sso_providers:
    - provider: microsoft
      client_id: os.environ/MICROSOFT_CLIENT_ID
      client_secret: os.environ/MICROSOFT_CLIENT_SECRET
      tenant_id: os.environ/MICROSOFT_TENANT_ID
      scope: "openid profile email"

  # CORS settings
  allowed_origins: ["*"]

  # Alerting (optional - configure later)
  alerting:
    - slack_webhook_url: os.environ/SLACK_WEBHOOK_URL
      alerting_threshold: 300  # Alert if request takes > 5 min

# Team/Role-based access control
router_settings:
  routing_strategy: simple-shuffle

  # Redis for caching (optional - add later)
  # redis_host: redis
  # redis_port: 6379
  # redis_password: os.environ/REDIS_PASSWORD

# User roles and permissions
permissions:
  admin_roles:
    - admin@deeprunner.ai

  devops_roles:
    - devops@deeprunner.ai

  team_member_roles:
    - "*@deeprunner.ai"  # All deeprunner emails get team member access

# Logging configuration
logging:
  level: INFO

# Budget and spend tracking
budget_manager:
  enabled: true
  default_budget:
    budget_duration: 30d
    max_budget: 1000.0  # USD per month per team
